{"version":3,"sources":["components/common/SuperInputText/SuperInputText.module.css","components/common/SuperButton/SuperButton.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/header/Header.module.css","components/login/Login.tsx","components/login/LoginContainer.tsx","components/profile/Profile.tsx","components/profile/ProfileContainer.tsx","components/common/SuperInputText/SuperInputText.tsx","components/common/SuperButton/SuperButton.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/test/Test.tsx","components/registration/Registration.tsx","components/registration/RegistrationContainer.tsx","components/error404/Error404.tsx","components/newPassword/NewPassword.tsx","components/newPassword/NewPasswordContainer.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/passwordRecovery/PasswordRecoveryContainer.tsx","components/Routes.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/login-reducer.ts","bll/newPassword-reducer.ts","bll/profile-reducer.ts","bll/recoveryPassword-reducer.ts","bll/registration-reducer.ts","bll/store.ts","index.tsx"],"names":["module","exports","Login","LoginContainer","Profile","ProfileContainer","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","setError","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Test","Registration","RegistrationContainer","Error404","NewPassword","NewPasswordContainer","PasswordRecovery","PasswordRecoveryContainer","PATH","Routes","path","render","Header","style","wrap","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SET_USER_DATA","initialState","SET_NEW_PASS","SET_USER_PROFILE","DELETE_PREV_PASS","ADD_NEW_USER","rootReducer","combineReducers","auth","state","action","profile","recoveryPassword","newPassword","registration","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26cede0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1c1ho\",\"superInput\":\"SuperInputText_superInput__tvKWa\",\"error\":\"SuperInputText_error__ECzLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__3cLSb\",\"default\":\"SuperButton_default__3fGvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2kSHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Header_wrap___6iya\"};","import React from 'react';\n\n\nexport const Login = () => {\n  return (\n    <div>\n      Login\n    </div>\n  );\n}\n","import React from 'react';\nimport {Login} from \"./Login\";\n\n\nexport const LoginContainer = () => {\n  return (\n    <div>\n      <Login/>\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport const Profile = () => {\n  return (\n    <div>\n      Profile\n    </div>\n  );\n}\n","import React from 'react';\nimport {Profile} from \"./Profile\";\n\n\nexport const ProfileContainer = () => {\n  return (\n    <div>\n      <Profile/>\n    </div>\n  );\n}\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError,\r\n\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        setError && setError('')\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${''? '' : s.error}`;\r\n    const finalInputClassName = error ? s.errorInput : s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children,\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span >{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React from 'react';\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\nimport SuperButton from \"../common/SuperButton/SuperButton\";\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\n\n\nexport const Test = () => {\n  return (\n    <div>\n      <SuperButton>Button</SuperButton>\n      <SuperInputText/>\n      <SuperCheckbox/>\n\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport const Registration = () => {\n  return (\n    <div>\n      Registration\n    </div>\n  );\n}\n","import React from 'react';\nimport {Registration} from \"./Registration\";\n\n\nexport const RegistrationContainer = () => {\n  return (\n    <div>\n      <Registration/>\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport const Error404 = () => {\n  return (\n    <div>\n        Error404\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport const NewPassword = () => {\n  return (\n    <div>\n        New Password\n    </div>\n  );\n}\n","import React from 'react';\nimport {NewPassword} from \"./NewPassword\";\n\n\nexport const NewPasswordContainer = () => {\n  return (\n    <div>\n      <NewPassword/>\n    </div>\n  );\n}\n","import React from 'react';\n\n\nexport const PasswordRecovery = () => {\n  return (\n    <div>\n        Password Recovery\n    </div>\n  );\n}\n","import React from 'react';\nimport {PasswordRecovery} from \"./PasswordRecovery\";\n\n\nexport const PasswordRecoveryContainer = () => {\n  return (\n    <div>\n      <PasswordRecovery/>\n    </div>\n  );\n}\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { LoginContainer } from \"./login/LoginContainer\";\r\nimport {ProfileContainer} from \"./profile/ProfileContainer\";\r\nimport {Test} from \"./test/Test\";\r\nimport {RegistrationContainer} from \"./registration/RegistrationContainer\";\r\nimport {Error404} from \"./error404/Error404\";\r\nimport {NewPasswordContainer} from \"./newPassword/NewPasswordContainer\";\r\nimport {PasswordRecoveryContainer} from \"./passwordRecovery/PasswordRecoveryContainer\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN:'/login',\r\n    REGISTRATION:'/reg',\r\n    PROFILE:'/profile',\r\n    ERROR_404:'/404',\r\n    RECOVERY_PASSWORD:'/rec_pass',\r\n    NEW_PASSWORD:'/new_pass',\r\n    TEST:'/test',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <PasswordRecoveryContainer/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordContainer/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport style from \"../header/Header.module.css\"\r\n\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <div className={style.wrap}>\r\n            <div >\r\n                <NavLink to={PATH.REGISTRATION}>Registration</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.RECOVERY_PASSWORD}>Recovery Password</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.NEW_PASSWORD}>NewPassword</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.TEST}>Test</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.ERROR_404}>Error404</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Routes} from \"./components/Routes\";\nimport {Header} from \"./components/header/Header\";\n\n\nconst App = () => {\n    return (\n    <div className=\"App\">\n        <Header/>\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\ntype InitialStateType = {\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n// export const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login,isAuth}} as const)\r\n\r\n//thunks\r\n\r\n\r\n\r\n\r\ntype ActionsType = any","\r\n\r\nconst SET_NEW_PASS = 'SET_NEW_PASS';\r\n\r\ntype InitialStateType = {\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_NEW_PASS:\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n//thunks\r\n\r\n\r\n\r\n\r\ntype ActionsType = any","\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\ntype InitialStateType = {\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n//thunks\r\n\r\n\r\n\r\n\r\ntype ActionsType = any","\r\n\r\nconst DELETE_PREV_PASS = 'DELETE_PREV_PASS';\r\n\r\ntype InitialStateType = {\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const recoveryPasswordReducer  = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case DELETE_PREV_PASS:\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n//thunks\r\n\r\n\r\n\r\n\r\ntype ActionsType = any","\r\n\r\nconst ADD_NEW_USER = 'ADD_NEW_USER';\r\n\r\ntype InitialStateType = {\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_USER:\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\n//thunks\r\n\r\n\r\n\r\n\r\ntype ActionsType = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport { newPasswordReducer } from \"./newPassword-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport { recoveryPasswordReducer} from \"./recoveryPassword-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : loginReducer,\r\n    profile: profileReducer,\r\n    recoveryPassword: recoveryPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    registration: registrationReducer,\r\n\r\n})\r\n\r\n\r\nexport type AppRootState = ReturnType<typeof rootReducer> //автомачически подтягивает типы из combineReducers\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n      <App />\n          </Provider>\n      </HashRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}