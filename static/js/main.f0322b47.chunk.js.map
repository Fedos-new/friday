{"version":3,"sources":["components/common/SuperInputText/SuperInputText.tsx","components/common/SuperButton/SuperButton.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","dal/LoginAPI.ts","dal/ProfileAPI.ts","bll/profile-reducer.ts","bll/app-reducer.ts","bll/login-reducer.ts","components/assets/preloader.svg","components/common/Preloader/Preloader.tsx","components/login/Login.tsx","components/login/LoginContainer.tsx","components/profile/Profile.tsx","components/profile/ProfileContainer.tsx","dal/SearchPacks.ts","bll/searchPacks-reducer.ts","components/test/Test.tsx","dal/RegistrationAPI.ts","bll/registration-reducer.ts","components/registration/Registration.tsx","components/registration/RegistrationContainer.tsx","components/error404/Error404.tsx","components/common/Loader/Loader.tsx","dal/NewPasswordAPI.ts","bll/newPassword-reducer.ts","dal/PasswordRecoveryAPI.ts","bll/recoveryPassword-reducer.ts","components/newPassword/NewPassword.tsx","components/newPassword/NewPasswordContainer.tsx","components/passwordRecovery/PasswordRecovery.tsx","components/passwordRecovery/PasswordRecoveryContainer.tsx","components/common/Search/Search.tsx","components/common/Pagination/Paginate.tsx","assets/image/up-arrow.svg","assets/image/down-arrow.svg","components/common/SortButton/SortButton.tsx","components/common/PriceRange/DoubleRangeSlider.tsx","dal/CardsAPI.ts","bll/cards-reducer.ts","components/Table/Table.tsx","components/packs/Packs.tsx","components/packs/PacksContainer.tsx","components/Cards/Cards.tsx","components/Routes.tsx","components/common/Menu/Menu.tsx","components/common/Modal/Modal.tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/Table/Table.module.css","components/common/Menu/Menu.module.css","components/common/Pagination/Paginate.module.css","components/packs/Packs.module.css","components/login/Login.module.css","components/registration/Registration.module.css","components/common/SortButton/SortButton.module.css","components/header/Header.module.css","components/common/SuperInputText/SuperInputText.module.css","components/newPassword/NewPassword.module.css","components/common/PriceRange/DoubleRangeSlider.module.css","components/common/Modal/Modal.module.css","components/profile/Profile.module.css","components/passwordRecovery/PasswordRecovery.module.css","components/common/SuperButton/SuperButton.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/common/Preloader/Preloader.module.css","components/common/Search/Search.module.css"],"names":["SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","setError","className","spanClassName","restProps","finalInputClassName","s","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","instance","axios","create","baseURL","withCredentials","authAPI","parameters","post","profileAPI","SET_USER_PROFILE","SET_MY_ID","initialState","profile","name","_id","avatar","created","updated","email","isAdmin","publicCardPacksCount","rememberMe","verified","myId","setMyIdAC","setProfileTC","dispatch","then","res","payload","console","log","data","setIsLoggedInAC","catch","rej","SET_STATUS","SET_ERROR","SET_INITIALIZED","status","initialized","setAppStatusAC","setAppErrorAC","initializeAppTC","promise","Promise","all","SET_IS_LOGGED_IN","isLoggedIn","Preloader","alt","style","preload","src","preloader","Login","props","serverError","useState","disable","setDisable","useDispatch","formik","useFormik","initialValues","password","validate","values","errors","onSubmit","response","wrap","handleSubmit","formLogin","placeholder","id","getFieldProps","touched","disabled","link","to","PATH","RECOVERY_PASSWORD","REGISTRATION","LoginContainer","useSelector","state","auth","app","PROFILE","Profile","cardPacksCount","logout","content","height","PACKS","onClick","ProfileContainer","LOGIN","searchPacksAPI","getPacksData","packName","min","max","sortPacks","a","page","pageCount","get","addNewPack","newPack","cardsPack","deletePack","idPack","delete","updatePack","put","SET_PACKS","SET_SEARCH_NAME","SET_MIN_MAX_PRICE_RANGE","SET_MIN_COUNT_MAX_COUNT","SET_SORTING","SET_PACKS_STATUS","SET_CURRENT_PAGE","SET_COUNT_PER_PAGE","SET_TOTAL_PACKS_COUNT","SET_ERROR_PACKS_MESSAGE","cardPacks","searchName","packsPerPage","currentPage","totalPacksCount","minCardsCount","maxCardsCount","setSearchNameAC","setStatusAC","setErrorAC","getPacksTC","getState","search","packsOnPage","cardPacksTotalCount","length","err","message","finally","Test","useEffect","registrationAPI","ADD_NEW_USER","isRegistration","registrationTC","Registration","checkPassword","wrapper","formRegistration","label","RegistrationContainer","registration","Error404","Loader","newPasswordAPI","newPassword","token","resetPasswordToken","SET_SUCCESS","success","sendNewPasswordTC","passwordRecoveryAPI","from","sendEmailTC","info","NewPassword","setPassword","confirmedPassword","setConfirmedPassword","setDisabled","matchError","setMatchError","useParams","onClickButtonHandler","box","event","newPassBtn","NewPasswordContainer","recoveryPassword","PasswordRecovery","setEmail","recoveryBtn","PasswordRecoveryContainer","Search","setValue","onSearchHandler","searchBtn","Paginate","handlePageChange","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","innerClass","paginationList","itemClass","paginationItem","linkClass","paginationLink","activeClass","paginationItemActive","activeLinkClass","paginationLinkActive","linkClassFirst","linkClassLast","disabledClass","linkClassPrev","linkClassNext","SortButton","sortPrice","x","btnUp","up","btnDown","down","StyledSlider","withStyles","root","color","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","Slider","DoubleRangeSlider","minPrice","maxPrice","valueArray","onChangeRange","valueLabelDisplay","aria-labelledby","cardsAPI","getCardsData","cardsPack_id","addNewCard","newCard","card","updateCard","deleteCard","SET_CARDS_PACK_ID","SET_CARDS_PACK","SET_CARDS_ERROR","cards","answer","question","grade","rating","shots","user_id","__v","cardsPackId","setCardsPackIdAC","setCardsErrorAC","getCardsTC","Table","headerElement","renderPacksBody","renderCardsBody","isTableCard","tableBox","addBtn","errorBox","table","map","index","toUpperCase","renderHeader","Packs","headerElementPacks","addPack","myID","packsBox","packsContent","searchBox","myPacks","paginateBox","PacksContainer","removePack","packId","updatePackTÐ¡","pageNumber","Array","isArray","cardsCount","user_name","CARDS","cardLink","operation","updBtn","delBtn","addPackTC","Cards","cardId","updateCardTC","removeCard","cardTableBox","ERROR_404","NEW_PASSWORD","TEST","Routes","path","exact","render","Menu","wrapLink","Modal","activeModal","setActiveModal","modalActive","modal","modalContent","btnClose","Header","active","setActive","styleH","btnMenu","btnMenuActive","nav","navActive","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f0322b47.chunk.js","sourcesContent":["import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// ÑÐ¸Ð¿ Ð¿ÑÐ¾Ð¿ÑÐ¾Ð² Ð¾Ð±ÑÑÐ½Ð¾Ð³Ð¾ Ð¸Ð½Ð¿ÑÑÐ°\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// Ð·Ð´ÐµÑÑ Ð¼Ñ Ð³Ð¾Ð²Ð¾ÑÐ¸Ð¼ ÑÑÐ¾ Ñ Ð½Ð°ÑÐµÐ³Ð¾ Ð¸Ð½Ð¿ÑÑÐ° Ð±ÑÐ´ÑÑ ÑÐ°ÐºÐ¸Ðµ Ð¶Ðµ Ð¿ÑÐ¾Ð¿ÑÑ ÐºÐ°Ðº Ñ Ð¾Ð±ÑÑÐ½Ð¾Ð³Ð¾ Ð¸Ð½Ð¿ÑÑÐ°\r\n// (ÑÑÐ¾Ð± Ð½Ðµ Ð¿Ð¸ÑÐ°ÑÑ value: string, onChange: ...; Ð¾Ð½Ð¸ ÑÐ¶Ðµ Ð²ÑÐµ Ð¾Ð¿Ð¸ÑÐ°Ð½Ñ Ð² DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // Ð¸ + ÐµÑÑ Ð¿ÑÐ¾Ð¿ÑÑ ÐºÐ¾ÑÐ¾ÑÑÑ Ð½ÐµÑ Ð² ÑÑÐ°Ð½Ð´Ð°ÑÑÐ½Ð¾Ð¼ Ð¸Ð½Ð¿ÑÑÐµ\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string | null | boolean\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // Ð´Ð¾ÑÑÐ°ÑÐ¼ Ð¸ Ð¸Ð³Ð½Ð¾ÑÐ¸ÑÑÐµÐ¼ ÑÑÐ¾Ð± Ð½ÐµÐ»ÑÐ·Ñ Ð±ÑÐ»Ð¾ Ð·Ð°Ð´Ð°ÑÑ Ð´ÑÑÐ³Ð¾Ð¹ ÑÐ¸Ð¿ Ð¸Ð½Ð¿ÑÑÐ°\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError,\r\n\r\n\r\n        ...restProps// Ð²ÑÐµ Ð¾ÑÑÐ°Ð»ÑÐ½ÑÐµ Ð¿ÑÐ¾Ð¿ÑÑ Ð¿Ð¾Ð¿Ð°Ð´ÑÑ Ð² Ð¾Ð±ÑÐµÐºÑ restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // ÐµÑÐ»Ð¸ ÐµÑÑÑ Ð¿ÑÐ¾Ð¿Ñ onChange\r\n        && onChange(e); // ÑÐ¾ Ð¿ÐµÑÐµÐ´Ð°ÑÑ ÐµÐ¼Ñ Ðµ (Ð¿Ð¾ÑÐºÐ¾Ð»ÑÐºÑ onChange Ð½Ðµ Ð¾Ð±ÑÐ·Ð°ÑÐµÐ»ÐµÐ½)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        setError && setError('')\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n\r\n        e.key === \"Enter\" // ÐµÑÐ»Ð¸ Ð½Ð°Ð¶Ð°ÑÐ° ÐºÐ½Ð¾Ð¿ÐºÐ° Enter\r\n        && onEnter // Ð¸ ÐµÑÑÑ Ð¿ÑÐ¾Ð¿Ñ onEnter\r\n        && onEnter(); // ÑÐ¾ Ð²ÑÐ·Ð²Ð°ÑÑ ÐµÐ³Ð¾\r\n    }\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${''? '' : s.error}`;\r\n    const finalInputClassName = error ? s.errorInput : s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={type}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // Ð¾ÑÐ´Ð°ÑÐ¼ Ð¸Ð½Ð¿ÑÑÑ Ð¾ÑÑÐ°Ð»ÑÐ½ÑÐµ Ð¿ÑÐ¾Ð¿ÑÑ ÐµÑÐ»Ð¸ Ð¾Ð½Ð¸ ÐµÑÑÑ (value Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ ÑÐ°Ð¼ Ð²Ð½ÑÑÑÐ¸)\r\n            />\r\n\r\n            {/*{error && <span className={finalSpanClassName}>{error}</span>}*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// ÑÐ¸Ð¿ Ð¿ÑÐ¾Ð¿ÑÐ¾Ð² Ð¾Ð±ÑÑÐ½Ð¾Ð¹ ÐºÐ½Ð¾Ð¿ÐºÐ¸, children Ð² ÐºÐ¾ÑÐ¾ÑÐ¾Ð¼ ÑÑÐ°Ð½Ð¸ÑÑÑÑ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ðµ ÐºÐ½Ð¾Ð¿ÐºÐ¸ ÑÐ°Ð¼ ÑÐ¶Ðµ Ð¾Ð¿Ð¸ÑÐ°Ð½\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// Ð²ÑÐµ Ð¾ÑÑÐ°Ð»ÑÐ½ÑÐµ Ð¿ÑÐ¾Ð¿ÑÑ Ð¿Ð¾Ð¿Ð°Ð´ÑÑ Ð² Ð¾Ð±ÑÐµÐºÑ restProps, ÑÐ°Ð¼ Ð¶Ðµ Ð±ÑÐ´ÐµÑ children,\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // Ð¾ÑÐ´Ð°ÑÐ¼ ÐºÐ½Ð¾Ð¿ÐºÐµ Ð¾ÑÑÐ°Ð»ÑÐ½ÑÐµ Ð¿ÑÐ¾Ð¿ÑÑ ÐµÑÐ»Ð¸ Ð¾Ð½Ð¸ ÐµÑÑÑ (children ÑÐ°Ð¼ Ð²Ð½ÑÑÑÐ¸)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// ÑÐ¸Ð¿ Ð¿ÑÐ¾Ð¿ÑÐ¾Ð² Ð¾Ð±ÑÑÐ½Ð¾Ð³Ð¾ Ð¸Ð½Ð¿ÑÑÐ°\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // Ð´Ð¾ÑÑÐ°ÑÐ¼ Ð¸ Ð¸Ð³Ð½Ð¾ÑÐ¸ÑÑÐµÐ¼ ÑÑÐ¾Ð± Ð½ÐµÐ»ÑÐ·Ñ Ð±ÑÐ»Ð¾ Ð·Ð°Ð´Ð°ÑÑ Ð´ÑÑÐ³Ð¾Ð¹ ÑÐ¸Ð¿ Ð¸Ð½Ð¿ÑÑÐ°\r\n        onChange, onChangeChecked,\r\n        className,\r\n        children, // Ð² ÑÑÑ Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½ÑÑ Ð¿Ð¾Ð¿Ð°Ð´ÑÑ ÑÐµÐºÑÑ, ÑÐ¸Ð¿Ð¸Ð·Ð¸ÑÐ¾Ð²Ð°ÑÑ Ð½Ðµ Ð½ÑÐ¶Ð½Ð¾ ÑÐ°Ðº ÐºÐ°Ðº Ð¾Ð½ Ð·Ð°ÑÐ¸Ð¿Ð¸Ð·Ð¸ÑÐ¾Ð²Ð°Ð½ Ð² React.FC\r\n\r\n        ...restProps// Ð²ÑÐµ Ð¾ÑÑÐ°Ð»ÑÐ½ÑÐµ Ð¿ÑÐ¾Ð¿ÑÑ Ð¿Ð¾Ð¿Ð°Ð´ÑÑ Ð² Ð¾Ð±ÑÐµÐºÑ restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\r\n        // ÑÐ´ÐµÐ»Ð°Ð¹ÑÐµ ÑÐ°Ðº ÑÑÐ¾Ð± ÑÐ°Ð±Ð¾ÑÐ°Ð» onChange Ð¸ onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // Ð¾ÑÐ´Ð°ÑÐ¼ Ð¸Ð½Ð¿ÑÑÑ Ð¾ÑÑÐ°Ð»ÑÐ½ÑÐµ Ð¿ÑÐ¾Ð¿ÑÑ ÐµÑÐ»Ð¸ Ð¾Ð½Ð¸ ÐµÑÑÑ (checked Ð½Ð°Ð¿ÑÐ¸Ð¼ÐµÑ ÑÐ°Ð¼ Ð²Ð½ÑÑÑÐ¸)\r\n            />\r\n            {children && <span >{children}</span>}\r\n        </label> // Ð±Ð»Ð°Ð³Ð¾Ð´Ð°ÑÑ label Ð½Ð°Ð¶Ð°ÑÐ¸Ðµ Ð½Ð° ÑÐ¿Ð°Ð½ Ð¿ÐµÑÐµÐ´Ð°ÑÑÑÑ Ð² Ð¸Ð½Ð¿ÑÑ\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import axios from 'axios'\r\n\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n\r\n})\r\n\r\n//api\r\nexport const authAPI = {\r\n    login(parameters: LoginParamsType) {\r\n        return instance.post('auth/login', parameters)\r\n    }\r\n}\r\n\r\n//type\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\nexport const profileAPI = {\r\n    getProfile() {\r\n        return instance.post('/auth/me')\r\n    }\r\n}\r\n","import {profileAPI} from '../dal/ProfileAPI';\r\nimport {Dispatch} from 'react';\r\nimport {setIsLoggedInAC} from './login-reducer';\r\n\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_MY_ID = 'SET_MY_ID'\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n\tprofile: {\r\n\t\tname: '',\r\n\t\t_id: '',\r\n\t\tavatar: '',\r\n\t\tcreated: '',\r\n\t\tupdated: '',\r\n\t\temail: '',\r\n\t\tisAdmin: false,\r\n\t\tpublicCardPacksCount: 0,\r\n\t\trememberMe: false,\r\n\t\tverified: false,\r\n\t\terror: ''\r\n\t},\r\n\tmyId: null\r\n}\r\n\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ActionsType): ProfileInitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_USER_PROFILE:\r\n\t\t\treturn {...state, profile: action.payload}\r\n\t\tcase SET_MY_ID: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmyId: action.myId\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// actions\r\nexport const setUserProfileAC = (payload: ProfileType) => {\r\n\treturn {\r\n\t\ttype: SET_USER_PROFILE,\r\n\t\tpayload\r\n\t} as const\r\n}\r\nexport const setMyIdAC = (myId: string | null) => ({type: SET_MY_ID, myId} as const)\r\n\r\n//thunks\r\nexport const setProfileTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n\treturn profileAPI.getProfile()\r\n\t\t.then(res => {\r\n        console.log(res.data._id)\r\n\t\t    dispatch(setMyIdAC(res.data._id))\r\n\t\t\t\tdispatch(setUserProfileAC(res.data))\r\n\t\t\t\tdispatch(setIsLoggedInAC(true))\r\n\t\t\t}\r\n\t\t)\r\n\t\t.catch(rej => {\r\n\t\t\tdispatch(setIsLoggedInAC(false))\r\n\t\t})\r\n}\r\n\r\n\r\nexport type ProfileType = {\r\n\t_id: string\r\n\temail: string\r\n\tname: string\r\n\tavatar: string\r\n\tpublicCardPacksCount: number\r\n\tcreated: string\r\n\tupdated: string\r\n\tisAdmin: boolean\r\n\tverified: boolean\r\n\trememberMe: boolean\r\n\terror: string\r\n}\r\n\r\nexport type ProfileInitialStateType = {\r\n\tprofile: ProfileType\r\n\tmyId: string | null\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setMyIdAC>\r\n\t| ReturnType<typeof setIsLoggedInAC>\r\n\t| ReturnType<typeof setUserProfileAC>\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport { setProfileTC } from \"./profile-reducer\";\r\n\r\nconst SET_STATUS = 'APP/SET-STATUS';\r\nconst SET_ERROR = 'APP/SET_ERROR';\r\nconst SET_INITIALIZED = 'APP/SET_INITIALIZED';\r\n\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {...state, status: action.status}\r\n        case SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case SET_INITIALIZED:\r\n            return {...state, initialized: action.initialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: SET_STATUS, status} as const)\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\n\r\nexport const setAppErrorAC = (error: RequestErrorType) => ({type: SET_ERROR, error} as const)\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\n\r\n\r\nexport const initializedSuccessAC = (value: boolean) => {\r\n    return {type: SET_INITIALIZED, value} as const\r\n}\r\n\r\nexport const initializeAppTC = ()=> (dispatch: Dispatch<ActionsType>) => {\r\n    const promise = dispatch(setProfileTC())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n                dispatch(initializedSuccessAC(true))\r\n            }\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type RequestErrorType = string | null\r\n\r\ntype InitialStateType = {\r\n    status: RequestStatusType,\r\n    error: RequestErrorType,\r\n    initialized: boolean\r\n}\r\n\r\ntype ActionsType = any\r\n","import {Dispatch} from 'redux'\r\nimport {authAPI, LoginParamsType} from \"../dal/LoginAPI\";\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\n\r\nconst SET_IS_LOGGED_IN = 'SET_IS_LOGGED_IN';\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    isLoggedIn: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_IS_LOGGED_IN:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: SET_IS_LOGGED_IN, value} as const)\r\n\r\n//thunks\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    authAPI.login(data)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n        .catch(rej => {\r\n            dispatch(setAppErrorAC(rej.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n\r\ntype InitialStateType = {\r\n    isLoggedIn: boolean\r\n}\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC>\r\n    | SetAppStatusActionType\r\n    | SetAppErrorActionType","export default __webpack_public_path__ + \"static/media/preloader.b78a56d2.svg\";","import React from 'react';\r\nimport preloader from '../../assets/preloader.svg'\r\nimport style from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img alt={\"Loading...\"} className={style.preload} src={preloader}/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport style from './Login.module.css'\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/SuperCheckbox/SuperCheckbox\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginTC} from \"../../bll/login-reducer\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {useFormik} from \"formik\";\r\nimport {RequestErrorType, RequestStatusType} from \"../../bll/app-reducer\";\r\n\r\n\r\ntype LoginType = {\r\n    status: RequestStatusType\r\n    serverError: RequestErrorType\r\n}\r\n\r\nexport const Login = (props: LoginType) => {\r\n\r\n    const { status, serverError} = props\r\n    const [disable, setDisable] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n\r\n    type  FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        rememberMe?: boolean\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n                setDisable(true)\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n                setDisable(true)\r\n            } else setDisable(false)\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        },\r\n    });\r\n\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrap}>\r\n            <h2>Login</h2>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={style.formLogin}>\r\n                    <SuperInputText placeholder='email'\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    {...formik.getFieldProps('email')}\r\n                                    error={serverError}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email\r\n                        ? (<div className={style.error}>{formik.errors.email}</div>)\r\n                        : null\r\n                    }\r\n                    <SuperInputText placeholder='password'\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    error={serverError}\r\n                                    {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password\r\n                        ? <div className={style.error}>{formik.errors.password}</div>\r\n                        : null\r\n                    }\r\n\r\n                    <SuperButton type={'submit'} disabled={disable}>Login</SuperButton>\r\n                    <label>Remember me\r\n                        <SuperCheckbox\r\n                            id=\"rememberMe\"\r\n                            type=\"rememberMe\"\r\n                            {...formik.getFieldProps('rememberMe')}\r\n                        />\r\n                    </label>\r\n                    {serverError ? <div className={style.error}>{serverError}</div> : null}\r\n                    <NavLink className={style.link} to={PATH.RECOVERY_PASSWORD}>Forgot password?</NavLink>\r\n                    <NavLink className={style.link} to={PATH.REGISTRATION}>Registration</NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Login} from \"./Login\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../bll/store\";\r\nimport {RequestErrorType, RequestStatusType} from \"../../bll/app-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\n\r\n\r\nexport const LoginContainer = () => {\r\n\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.auth.isLoggedIn)\r\n    const status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\r\n    const serverError = useSelector<AppRootState, RequestErrorType>(state => state.app.error)\r\n\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n            <Login\r\n                status={status}\r\n                serverError={serverError}\r\n            />\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport style from './Profile.module.css'\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {PATH} from \"../Routes\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype ProfileType = {\r\n    name: string\r\n    cardPacksCount: number\r\n    avatar:string\r\n    logout: ()=> void\r\n}\r\n\r\nexport const Profile = (props: ProfileType) => {\r\n\r\n    const {name, cardPacksCount, logout} = props\r\n\r\n    return (\r\n        <div>\r\n            <h2>Profile</h2>\r\n            <div className={style.wrap}>\r\n                <div className={style.content}>\r\n                <img src=\"some avatar\" alt=\"avatar\" height=\"200px\"/>\r\n                <div> Name: {name}</div>\r\n                <div>  <NavLink className={style.link} to={PATH.PACKS}>Public card packs count: {cardPacksCount}</NavLink></div>\r\n                    <SuperButton onClick={logout}>Logout</SuperButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootState} from \"../../bll/store\";\r\nimport {PATH} from \"../Routes\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {setIsLoggedInAC} from \"../../bll/login-reducer\";\r\n\r\n\r\nexport const ProfileContainer = () => {\r\n    const name = useSelector<AppRootState, string>((state) => state.profile.profile.name)\r\n    const avatar = useSelector<AppRootState, string>((state) => state.profile.profile.avatar)\r\n    const cardPacksCount = useSelector<AppRootState, number>((state) => state.profile.profile.publicCardPacksCount)\r\n    const isLoggedIn = useSelector<AppRootState, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    console.log(name)\r\n\r\n    const logout = () => {\r\n        dispatch(setIsLoggedInAC(false))\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Profile  name={name}\r\n                      cardPacksCount={cardPacksCount}\r\n                      avatar={avatar}\r\n                      logout={logout}\r\n\r\n            />\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n\t// baseURL: 'http://localhost:7542/2.0/',\r\n\twithCredentials: true\r\n})\r\n\r\n\r\nexport const searchPacksAPI = {\r\n\tgetPacksData: async (\r\n\t\tpackName: string, min: number, max: number, sortPacks: string, page: number = 1 , pageCount: number = 15, myId: string | null\r\n\t) => {\r\n\t\tconst response = await instance.get(`cards/pack?pageCount=${pageCount}&page=${page}&packName=${packName}&sortPacks=${sortPacks}&min=${min}&max=${max}&user_id=${myId === null ? '' : myId}`)\r\n\t\treturn response.data\r\n\t},\r\n\taddNewPack: async (newPack: any) => {\r\n\t\tconst response = await instance.post('cards/pack', {cardsPack: newPack})\r\n\t\treturn response.data\r\n\t},\r\n\tdeletePack: async  (idPack: string | null) => {\r\n\t\tconst response = await instance.delete(`cards/pack?id=${idPack}`)\r\n\t\treturn response.data\r\n\t},\r\n\tupdatePack: async (updatePack: any) => {\r\n\t\tconst response = await instance.put('cards/pack', {cardsPack: updatePack})\r\n\t\treturn response.data\r\n\t}\r\n}\r\n","import {Dispatch} from 'redux';\r\nimport {AppRootState} from './store';\r\nimport {searchPacksAPI} from '../dal/SearchPacks';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {RequestStatusType} from './newPassword-reducer';\r\n\r\nconst SET_PACKS = 'SET_PACKS'\r\n// const SET_MY_ID= 'SET_MY_ID'\r\nconst SET_SEARCH_NAME = 'SET_SEARCH_NAME';\r\nconst SET_MIN_MAX_PRICE_RANGE = 'SET_MIN_MAX_PRICE_RANGE';\r\nconst SET_MIN_COUNT_MAX_COUNT = 'SET_MIN_COUNT_MAX_COUNT';\r\nconst SET_SORTING = 'SET_SORTING';\r\nconst SET_PACKS_STATUS = 'SET_PACKS_STATUS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_COUNT_PER_PAGE = 'SET_COUNT_PER_PAGE';\r\nconst SET_TOTAL_PACKS_COUNT = 'SET_TOTAL_PACKS_COUNT';\r\nconst SET_ERROR_PACKS_MESSAGE = 'SET_ERROR_PACKS_MESSAGE';\r\n\r\n\r\ntype initialStateType = {\r\n\t// myId: string | null\r\n\tcardPacks: Array<PackType>\r\n\tsearchName: string\r\n\tmin: number\r\n\tmax: number\r\n\tsortPacks: string\r\n\tpage: number\r\n\tpacksPerPage: number\r\n\tcurrentPage: number\r\n\ttotalPacksCount: number\r\n\tminCardsCount: number\r\n\tmaxCardsCount: number\r\n\terror: string\r\n\tstatus: RequestStatusType\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n\t// myId: null,\r\n\tcardPacks: [],\r\n\tsearchName: '',\r\n\tmin: 0,\r\n\tmax: 24,\r\n\tsortPacks: '',\r\n\tpage: 1,\r\n\tpacksPerPage: 10,\r\n\tcurrentPage: 1,\r\n\ttotalPacksCount: 0,\r\n\tminCardsCount: 0,\r\n\tmaxCardsCount: 24,\r\n\terror: '',\r\n\tstatus: 'idle'\r\n}\r\n\r\nexport type PackType = {\r\n\tcardsCount: number | null\r\n\tcreated: Date | null\r\n\tdeckCover: string | null\r\n\tgrade: number | null\r\n\tmore_id: string | null\r\n\tname: string | null\r\n\tpath: string | null\r\n\tprivate: boolean\r\n\trating: number | null\r\n\tshots: number | null\r\n\ttype: string | null\r\n\tupdated: Date | null\r\n\tuser_id: string | null\r\n\tuser_name: string | null\r\n\t__v: number | null\r\n\t_id: string\r\n}\r\n\r\n\r\nexport const searchPacksReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_SEARCH_NAME: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsearchName: action.searchName\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_MIN_MAX_PRICE_RANGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmin: action.min,\r\n\t\t\t\tmax: action.max\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_SORTING : {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortPacks: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_CURRENT_PAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpage: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_COUNT_PER_PAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpacksPerPage: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_TOTAL_PACKS_COUNT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalPacksCount: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_MIN_COUNT_MAX_COUNT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tminCardsCount: action.minCardsCount,\r\n\t\t\t\tmaxCardsCount: action.maxCardsCount\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_PACKS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardPacks: action.cardPacks\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_PACKS_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_ERROR_PACKS_MESSAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.value\r\n\t\t\t}\r\n\t\t}\r\n\t\t// case SET_MY_ID: {\r\n\t\t// \treturn {\r\n\t\t// \t\t...state,\r\n\t\t// \t\tmyId: action.myId\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setPacksAC = (cardPacks: Array<PackType>) => ({type: SET_PACKS, cardPacks} as const)\r\nexport const setSearchNameAC = (searchName: string) => ({type: SET_SEARCH_NAME, searchName} as const)\r\nexport const setMinMaxPriceRangeAC = (min: number, max: number) => ({type: SET_MIN_MAX_PRICE_RANGE, min, max} as const)\r\nexport const setMinMaxCardsCountAC = (minCardsCount: number, maxCardsCount: number) => ({\r\n\ttype: SET_MIN_COUNT_MAX_COUNT,\r\n\tminCardsCount,\r\n\tmaxCardsCount\r\n} as const)\r\nexport const setSortingAC = (value: string) => ({type: SET_SORTING, value} as const)\r\nexport const setCurrentPageAC = (value: number) => ({type: SET_CURRENT_PAGE, value} as const)\r\nexport const setCountPerPageAC = (value: number) => ({type: SET_COUNT_PER_PAGE, value} as const)\r\nexport const setTotalPacksCountAC = (value: number) => ({type: SET_TOTAL_PACKS_COUNT, value} as const)\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: SET_PACKS_STATUS, status} as const)\r\nexport const setErrorAC = (value: string) => ({type: SET_ERROR_PACKS_MESSAGE, value} as const)\r\n// export const setMyIdAC = (myId: string | null) => ({type: SET_MY_ID, myId} as const)\r\n\r\n\r\ntype ActionsType =\r\n\tReturnType<typeof setSearchNameAC>\r\n\t| ReturnType<typeof setMinMaxPriceRangeAC>\r\n\t| ReturnType<typeof setSortingAC>\r\n\t| ReturnType<typeof setCurrentPageAC>\r\n\t| ReturnType<typeof setCountPerPageAC>\r\n\t| ReturnType<typeof setTotalPacksCountAC>\r\n\t| ReturnType<typeof setMinMaxCardsCountAC>\r\n\t| ReturnType<typeof setPacksAC>\r\n\t| ReturnType<typeof setStatusAC>\r\n\t| ReturnType<typeof setErrorAC>\r\n// | ReturnType<typeof setMyIdAC>\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootState, Dispatch<ActionsType>, ActionsType>\r\n\r\nexport const getPacksTC = (): ThunkType => {\r\n\r\n\treturn (dispatch, getState) => {\r\n\r\n\t\tconst state = getState()\r\n\t\tconst searchName = state.search.searchName\r\n\t\tconst min = state.search.min\r\n\t\tconst max = state.search.max\r\n\t\tconst sortPacks = state.search.sortPacks\r\n\t\tconst currentPage = state.search.page\r\n\t\tconst packsOnPage = state.search.packsPerPage\r\n\t\tconst myId = state.profile.myId\r\n\r\n\t\tconsole.log(myId)\r\n\r\n\t\t// dispatch(setStatusAC('loading'))\r\n\t\tsearchPacksAPI.getPacksData(searchName, min, max, sortPacks, currentPage, packsOnPage, myId)\r\n\t\t\t.then(response => {\r\n\t\t\t\tconsole.log(response)\r\n\t\t\t\tdispatch(setPacksAC(response.cardPacks))\r\n\r\n\t\t\t\tdispatch(setTotalPacksCountAC(response.cardPacksTotalCount))\r\n\t\t\t\t// dispatch(setMinMaxPriceRangeAC(response.minCardsCount, response.maxCardsCount))\r\n\t\t\t\t// dispatch(setMinMaxCardsCountAC(response.minCardsCount, response.maxCardsCount))\r\n\t\t\t\tif (!response.cardPacks.length) {\r\n\t\t\t\t\tdispatch(setErrorAC('Something went wrong.. Please, try again.'))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconst error = err.response\r\n\t\t\t\t\t? err.response.data.error\r\n\t\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t\tdispatch(setErrorAC(error))\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tdispatch(setStatusAC('succeeded'))\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\n\r\nexport const deletePackTC = (idPack: string | null): ThunkType => (dispatch) => {\r\n\t// dispatch(setStatusAC('loading'))\r\n\tsearchPacksAPI.deletePack(idPack)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log(response.data)\r\n\t\t\tdispatch(getPacksTC())\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\tconsole.log(error)\r\n\t\t\tdispatch(setErrorAC(error))\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tdispatch(setStatusAC('succeeded'))\r\n\t\t})\r\n}\r\n\r\nexport const addPackTC = (name: string): ThunkType => (dispatch, getState) => {\r\n\t// dispatch(setStatusAC('loading'))\r\n\r\n\tconst newCard = {\r\n\t\t// name: 'name',\r\n\t\tname: name,\r\n\t\t// path: 'string',\r\n\t\t// grade: 0,\r\n\t\t// shots: 0,\r\n\t\t// rating: 0,\r\n\t\t// deckCover: 'string',\r\n\t\t// private: false,\r\n\t\t// type: 'string'\r\n\t}\r\n\tsearchPacksAPI.addNewPack(newCard)\r\n\t\t.then(response => {\r\n\t\t\tconsole.log(response.data)\r\n\t\t\tdispatch(getPacksTC())\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\tconsole.log(error)\r\n\t\t\tdispatch(setErrorAC(error))\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tdispatch(setStatusAC('succeeded'))\r\n\t\t})\r\n}\r\n\r\nexport const updatePackTÐ¡ = (packId: string): ThunkType => (dispatch, getState) => {\r\n\tconst newPack = {\r\n\t\t_id: packId,\r\n\t\tname: 'Pack was updated'\r\n\t}\r\n\tsearchPacksAPI.updatePack(newPack)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(getPacksTC())\r\n\t\t\tconsole.log(res)\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err)\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\tdispatch(setErrorAC(error))\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tdispatch(setStatusAC('succeeded'))\r\n\t\t})\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport SuperInputText from '../common/SuperInputText/SuperInputText';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport SuperCheckbox from '../common/SuperCheckbox/SuperCheckbox';\r\nimport {getPacksTC} from '../../bll/searchPacks-reducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nexport const Test = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getPacksTC())\r\n\t}, [dispatch])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SuperButton>Button</SuperButton>\r\n\t\t\t<SuperInputText/>\r\n\t\t\t<SuperCheckbox/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n\twithCredentials: true\r\n})\r\n\r\n//api\r\nexport const registrationAPI = {\r\n\tregistration(parameters:RegistrationParamsType ) {\r\n\t\treturn instance.post('auth/register',parameters)\r\n\t}\r\n}\r\n\r\n//type\r\nexport type RegistrationParamsType = {\r\n\temail: string\r\n\tpassword: string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"./app-reducer\";\r\nimport {registrationAPI, RegistrationParamsType} from \"../dal/RegistrationAPI\";\r\n\r\nconst ADD_NEW_USER = 'addUserAC';\r\n\r\nconst initialState: InitialStateType = {\r\n    isRegistration: false\r\n}\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_USER:\r\n            return {\r\n               ...state,\r\n                isRegistration: action.isRegistration\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const addUserAC = (isRegistration: boolean) =>({type: ADD_NEW_USER, isRegistration} as const)\r\n\r\n//thunks\r\n\r\nexport const registrationTC = (data: RegistrationParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    registrationAPI.registration(data)\r\n        .then(res => {\r\n            dispatch(addUserAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n\r\n        })\r\n        .catch(rej => {\r\n            dispatch(setAppErrorAC(rej.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n\r\nexport type ActionsType = ReturnType<typeof addUserAC>\r\n    |SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n\r\n\r\ntype InitialStateType = {\r\n    isRegistration: boolean\r\n}","import React, {useState} from 'react';\r\nimport style from './Registration.module.css';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch} from 'react-redux';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RequestErrorType, RequestStatusType} from \"../../bll/app-reducer\";\r\nimport {PATH} from \"../Routes\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport SuperInputText from \"../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/SuperButton/SuperButton\";\r\nimport {registrationTC} from \"../../bll/registration-reducer\";\r\n\r\ntype RegisterType = {\r\n    status: RequestStatusType\r\n    serverError: RequestErrorType\r\n}\r\n\r\nexport const Registration = (props: RegisterType) => {\r\n\r\n    const {status, serverError} = props\r\n    const [disable, setDisable] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    type  FormikErrorType = {\r\n        email?: string\r\n        password?: string\r\n        checkPassword?: string\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            checkPassword: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n                setDisable(true)\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Password is required';\r\n                setDisable(true)\r\n            } else setDisable(false)\r\n            if (!values.checkPassword) {\r\n                errors.checkPassword = 'Password is required';\r\n                setDisable(true)\r\n            } else setDisable(false)\r\n            if (values.password !== values.checkPassword) {\r\n                errors.checkPassword = 'Passwords are not equal';\r\n                setDisable(true)\r\n            } else setDisable(false)\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(registrationTC(values))\r\n\r\n        }\r\n    })\r\n\r\n    if (status === 'loading') {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <h2>Registration</h2>\r\n            <p>Please fill the form for registration</p>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={style.formRegistration}>\r\n                    <SuperInputText placeholder=\"email\"\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    {...formik.getFieldProps('email')}\r\n                                    error={serverError}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email\r\n                        ? (<div className={style.error}>{formik.errors.email}</div>)\r\n                        : null\r\n                    }\r\n                    <SuperInputText placeholder=\"password\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    error={serverError}\r\n                                    {...formik.getFieldProps('password')}\r\n                    />\r\n                    {formik.touched.password && formik.errors.password\r\n                        ? <div className={style.error}>{formik.errors.password}</div>\r\n                        : null\r\n                    }\r\n                    <SuperInputText placeholder=\"confirm password\"\r\n                                    id=\"checkPassword\"\r\n                                    type=\"password\"\r\n                                    error={serverError}\r\n                                    {...formik.getFieldProps('checkPassword')}\r\n                    />\r\n                    <label className={style.label}>password length must be at least 8 characters</label>\r\n                    <SuperButton type={'submit'} disabled={disable}>Registration</SuperButton>\r\n                    {serverError ? <div className={style.error}>{serverError}</div> : null}\r\n                    <NavLink className={style.link} to={PATH.LOGIN}>Login page</NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport {Registration} from \"./Registration\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootState} from '../../bll/store'\r\nimport {RequestErrorType, RequestStatusType} from \"../../bll/app-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../Routes\";\r\n\r\nexport const RegistrationContainer = () => {\r\n\r\n    const status = useSelector<AppRootState, RequestStatusType>(state => state.app.status)\r\n    const serverError = useSelector<AppRootState, RequestErrorType>(state => state.app.error)\r\n    const isRegistration = useSelector<AppRootState, boolean>(state => state.registration.isRegistration)\r\n\r\n    if (isRegistration) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <Registration\r\n            serverError={serverError}\r\n            status={status}\r\n        />\r\n    );\r\n}\r\n","import React from 'react';\n\n\nexport const Error404 = () => {\n  return (\n    <div>\n        Error404\n    </div>\n  );\n}\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n\r\n\treturn (\r\n\t\t<div className=\"lds-ellipsis\">\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t\t<div></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loader","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n\t// baseURL: 'http://localhost:7542/2.0/',\r\n\twithCredentials: true\r\n})\r\n\r\n\r\nexport const newPasswordAPI = {\r\n\tsendNewPassword(newPassword: string, token: string | undefined) {\r\n\t\treturn instance.post('auth/set-new-password',\r\n\t\t\t{\r\n\t\t\t\tpassword: newPassword,\r\n\t\t\t\tresetPasswordToken: token\r\n\t\t})\r\n\t}\r\n}","import {Dispatch} from 'redux';\r\nimport {newPasswordAPI} from '../dal/NewPasswordAPI';\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_SUCCESS = 'SET_SUCCESS'\r\nconst SET_STATUS = 'SET_STATUS'\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n\tstatus: RequestStatusType\r\n\terror: string\r\n\tsuccess: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\tstatus: 'idle',\r\n\terror: '',\r\n\tsuccess: ''\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.error\r\n\t\t\t}\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\tcase SET_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsuccess: action.success\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// actions\r\nexport const setErrorAC = (error: string) => {\r\n\treturn {\r\n\t\ttype: SET_ERROR,\r\n\t\terror\r\n\t} as const\r\n}\r\n\r\nexport const setSuccessAC = (success: string) => {\r\n\treturn {\r\n\t\ttype: SET_SUCCESS,\r\n\t\tsuccess\r\n\t} as const\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: SET_STATUS,\r\n\t\tstatus\r\n\t} as const\r\n}\r\n\r\n\r\n//thunks\r\nexport const sendNewPasswordTC = (newPassword: string, token: string) => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tnewPasswordAPI.sendNewPassword(newPassword, token)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res.data.message)\r\n\t\t\tdispatch(setSuccessAC(res.data.message))\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console')\r\n\t\t\tdispatch(setErrorAC(error))\r\n\t\t\tdispatch(setAppStatusAC('failed'))\r\n\t\t})\r\n}\r\n\r\n\r\ntype setErrorACType = ReturnType<typeof setErrorAC>\r\ntype setSuccessACType = ReturnType<typeof setSuccessAC>\r\ntype setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\n\r\ntype ActionsType = setErrorACType | setSuccessACType | setAppStatusACType","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n\t// baseURL: 'http://localhost:7542/2.0/',\r\n\twithCredentials: true\r\n})\r\n\r\n\r\nexport const passwordRecoveryAPI = {\r\n\tsendEmail(email: string) {\r\n\t\treturn instance.post('auth/forgot',\r\n\t\t\t{\r\n\t\t\t\temail: email,\r\n\t\t\t\tfrom: 'mariya.syrokvash@yandex.ru',\r\n\t\t\t\tmessage: `<div style=\"background-color: lime; padding: 15px\">\r\n\t\t\t\t\t\t\t\t\t\t<p>Please, click on the link and enter a new password</p>\r\n\t\t\t\t\t\t\t\t\t\t<a href='https://fedos-new.github.io/friday/#/new_pass/$token$'>Recovery password</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t`\r\n\t\t\t})\r\n\t}\r\n}","import {Dispatch} from 'redux';\r\nimport {passwordRecoveryAPI} from '../dal/PasswordRecoveryAPI';\r\n\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_SUCCESS = 'SET_SUCCESS'\r\nconst SET_STATUS = 'SET_STATUS'\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n\tstatus: RequestStatusType\r\n\terror: string\r\n\tsuccess: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n\tstatus: 'idle',\r\n\terror: '',\r\n\tsuccess: ''\r\n}\r\n\r\nexport const recoveryPasswordReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_STATUS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstatus: action.status\r\n\t\t\t}\r\n\t\tcase SET_ERROR:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.error\r\n\t\t\t}\r\n\t\tcase SET_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsuccess: action.success\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n// actions\r\nexport const setErrorAC = (error: string) => {\r\n\treturn {\r\n\t\ttype: SET_ERROR,\r\n\t\terror\r\n\t} as const\r\n}\r\n\r\nexport const setSuccessAC = (success: string) => {\r\n\treturn {\r\n\t\ttype: SET_SUCCESS,\r\n\t\tsuccess\r\n\t} as const\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: SET_STATUS,\r\n\t\tstatus\r\n\t} as const\r\n}\r\n\r\n\r\n//thunks\r\nexport const sendEmailTC = (email: string) => (dispatch: Dispatch) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tpasswordRecoveryAPI.sendEmail(email)\r\n\t\t.then(res => {\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch(setSuccessAC(res.data.info))\r\n\t\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console')\r\n\t\t\tdispatch(setErrorAC(error))\r\n\t\t\tdispatch(setAppStatusAC('failed'))\r\n\t\t})\r\n}\r\n\r\ntype setErrorACType = ReturnType<typeof setErrorAC>\r\ntype setSuccessACType = ReturnType<typeof setSuccessAC>\r\ntype setAppStatusACType = ReturnType<typeof setAppStatusAC>\r\n\r\ntype ActionsType = setErrorACType | setSuccessACType | setAppStatusACType","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport s from './NewPassword.module.css'\r\nimport SuperInputText from '../common/SuperInputText/SuperInputText';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport Loader from '../common/Loader/Loader';\r\nimport {sendNewPasswordTC} from '../../bll/newPassword-reducer';\r\nimport {RequestStatusType, setErrorAC} from '../../bll/recoveryPassword-reducer';\r\nimport {PATH} from '../Routes';\r\n\r\ntype NewPasswordType = {\r\n\terror: string\r\n\tsuccess: string\r\n\tstatus: RequestStatusType\r\n}\r\n\r\ntype ParamTypes = {\r\n\ttoken: string\r\n}\r\n\r\nexport const NewPassword = (props: NewPasswordType) => {\r\n\tconst [password, setPassword] = useState<string>('')\r\n\tconst [confirmedPassword, setConfirmedPassword] = useState<string>('')\r\n\tconst [disabled, setDisabled] = useState<boolean>(true)\r\n\tconst [matchError, setMatchError] = useState<boolean>(false)\r\n\tconst dispatch = useDispatch();\r\n\tconst {token} = useParams<ParamTypes>()\r\n\r\n\tconst onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetDisabled(false)\r\n\t\tsetMatchError(false)\r\n\t\tsetPassword(event.currentTarget.value)\r\n\t\tdispatch(setErrorAC(''))\r\n\t}\r\n\r\n\tconst onChangeInputConfirmedHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetMatchError(false)\r\n\t\tsetConfirmedPassword(event.currentTarget.value)\r\n\t}\r\n\r\n\tconst onClickButtonHandler = () => {\r\n\t\tif (password !== confirmedPassword) {\r\n\t\t\treturn setMatchError(true)\r\n\t\t}\r\n\r\n\t\tdispatch(sendNewPasswordTC(password, token))\r\n\t\tsetDisabled(true)\r\n\t\tsetPassword('')\r\n\t\tsetConfirmedPassword('')\r\n\t}\r\n\r\n\r\n\tconst onEnter = () => {\r\n\t\tif (!props.error) {\r\n\t\t\tonClickButtonHandler()\r\n\t\t}\r\n\t}\r\n\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && onEnter();\r\n\r\n\tif (props.status === 'loading') {\r\n\t\treturn <Loader/>\r\n\t}\r\n\r\n\tif (props.success) {\r\n\t\treturn <Redirect to={PATH.LOGIN}/>\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.box}>\r\n\t\t\t<h2>New password</h2>\r\n\t\t\t<SuperInputText placeholder='New password' value={password} onChange={onChangeInputHandler}\r\n\t\t\t\t\t\t\t\t\t\t\terror={props.error} onKeyPress={onKeyPressHandler} type='password'/>\r\n\t\t\t<div className={s.error}>{props.error}</div>\r\n\t\t\t{\r\n\t\t\t\t!props.error &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<SuperInputText placeholder='Confirm password' value={confirmedPassword}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeInputConfirmedHandler} type='password'/>\r\n\t\t\t\t\t\t<div className={s.error}>{matchError ? 'Passwords don\\'t match!' : ''}</div>\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\t\t\t<SuperButton disabled={disabled} onClick={onClickButtonHandler} className={s.newPassBtn}>Save</SuperButton>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport {NewPassword} from \"./NewPassword\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootState} from '../../bll/store';\r\nimport {RequestStatusType} from '../../bll/recoveryPassword-reducer';\r\n\r\nexport const NewPasswordContainer = () => {\r\n  const error = useSelector<AppRootState, string>((state) => state.recoveryPassword.error)\r\n  const success = useSelector<AppRootState, string>((state) => state.recoveryPassword.success)\r\n  const status = useSelector<AppRootState, RequestStatusType>((state) => state.recoveryPassword.status)\r\n\r\n  return (\r\n    <div>\r\n      <NewPassword error={error} success={success} status={status}/>\r\n    </div>\r\n  );\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport SuperInputText from '../common/SuperInputText/SuperInputText';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport s from './PasswordRecovery.module.css';\r\nimport {useDispatch} from 'react-redux';\r\nimport {RequestStatusType, sendEmailTC, setErrorAC} from '../../bll/recoveryPassword-reducer';\r\nimport Loader from '../common/Loader/Loader';\r\n\r\ntype PasswordRecoveryType = {\r\n\terror: string\r\n\tsuccess: string\r\n\tstatus: RequestStatusType\r\n}\r\n\r\nexport const PasswordRecovery = (props: PasswordRecoveryType) => {\r\n\tconst [email, setEmail] = useState<string>('')\r\n\tconst [disabled, setDisabled] = useState<boolean>(true)\r\n\tconst dispatch = useDispatch();\r\n\r\n\r\n\tconst onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetDisabled(false)\r\n\t\tsetEmail(event.currentTarget.value)\r\n\t\tdispatch(setErrorAC(''))\r\n\t}\r\n\r\n\tconst onClickButtonHandler = () => {\r\n\t\tdispatch(sendEmailTC(email))\r\n\t\tsetDisabled(true)\r\n\t\tsetEmail('')\r\n\t}\r\n\r\n\tconst onEnter = () => {\r\n\t\tif (!props.error) {\r\n\t\t\tonClickButtonHandler()\r\n\t\t}\r\n\t}\r\n\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && onEnter();\r\n\r\n\tif (props.status === 'loading') {\r\n\t\treturn <Loader/>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.box}>\r\n\t\t\t{\r\n\t\t\t\tprops.success ?\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<p>Success! The message was {props.success}</p>\r\n\t\t\t\t\t\t<p>Please, check your email.</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h2>Recover Password</h2>\r\n\t\t\t\t\t\t<SuperInputText placeholder='Email' value={email} onKeyPress={onKeyPressHandler} onChange={onChangeInputHandler} type='text'/>\r\n\t\t\t\t\t\t<div className={s.error}>{props.error && props.error}</div>\r\n\t\t\t\t\t\t<SuperButton onClick={onClickButtonHandler} disabled={disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t className={s.recoveryBtn}> Send </SuperButton>\r\n\t\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport {PasswordRecovery} from \"./PasswordRecovery\";\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootState} from '../../bll/store';\r\nimport {RequestStatusType} from '../../bll/recoveryPassword-reducer';\r\n\r\n\r\nexport const PasswordRecoveryContainer = () => {\r\n  const error = useSelector<AppRootState, string>((state) => state.recoveryPassword.error)\r\n  const success = useSelector<AppRootState, string>((state) => state.recoveryPassword.success)\r\n  const status = useSelector<AppRootState, RequestStatusType>((state) => state.recoveryPassword.status)\r\n\r\n  return (\r\n    <div>\r\n      <PasswordRecovery error={error} success={success} status={status}/>\r\n    </div>\r\n  );\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport SuperButton from '../SuperButton/SuperButton';\r\nimport SuperInputText from '../SuperInputText/SuperInputText';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getPacksTC, setSearchNameAC} from '../../../bll/searchPacks-reducer';\r\nimport s from './Search.module.css'\r\n\r\n\r\nconst Search = () => {\r\n\tconst [value, setValue] = useState<string>('')\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tevent.currentTarget.value && setSearchNameAC(event.currentTarget.value)\r\n\t\tevent.currentTarget.value && dispatch(setSearchNameAC(event.currentTarget.value))\r\n\t}\r\n\r\n\tconst onSearchHandler = () => {\r\n\t\tdispatch(getPacksTC())\r\n\t\tsetValue('')\r\n\t}\r\n\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && onSearchHandler();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SuperInputText onKeyPress={onKeyPressHandler} onChange={onChangeInputHandler}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'product name'}/>\r\n\r\n\r\n\t\t\t<SuperButton className={s.searchBtn} onClick={onSearchHandler}>Search</SuperButton>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","import React, {FC} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootState} from '../../../bll/store';\r\nimport Pagination from 'react-js-pagination';\r\nimport s from './Paginate.module.css';\r\nimport {getPacksTC, setCurrentPageAC} from '../../../bll/searchPacks-reducer';\r\n\r\ntype PaginatePropsType = {\r\n\ttotalPacksCount: number\r\n\tpacksPerPage: number\r\n\tpage: number\r\n\thandlePageChange: (pageNumber: number) => void\r\n}\r\n\r\n\r\nexport const Paginate: FC<PaginatePropsType> = ({\r\n\ttotalPacksCount,packsPerPage,page,handlePageChange\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}) => {\r\n\r\n\r\n\treturn (\r\n\t\t<Pagination\r\n\t\t\tactivePage={page}\r\n\t\t\titemsCountPerPage={packsPerPage}\r\n\t\t\ttotalItemsCount={totalPacksCount}\r\n\t\t\tpageRangeDisplayed={10}\r\n\t\t\tonChange={handlePageChange}\r\n\t\t\tinnerClass={s.paginationList}\r\n\t\t\titemClass={s.paginationItem}\r\n\t\t\tlinkClass={s.paginationLink}\r\n\t\t\tactiveClass={s.paginationItemActive}\r\n\t\t\tactiveLinkClass={s.paginationLinkActive}\r\n\t\t\tlinkClassFirst={s.linkClassFirst}\r\n\t\t\tlinkClassLast={s.linkClassLast}\r\n\t\t\tdisabledClass={s.disabledClass}\r\n\t\t\tlinkClassPrev={s.linkClassPrev}\r\n\t\t\tlinkClassNext={s.linkClassNext}\r\n\t\t/>\r\n\t)\r\n}","export default __webpack_public_path__ + \"static/media/up-arrow.7bcbc04e.svg\";","export default __webpack_public_path__ + \"static/media/down-arrow.9a3add57.svg\";","import React, {useState} from 'react';\r\nimport s from './SortButton.module.css'\r\nimport SuperButton from '../SuperButton/SuperButton';\r\nimport up from './../../../assets/image/up-arrow.svg'\r\nimport down from './../../../assets/image/down-arrow.svg'\r\nimport {useDispatch} from 'react-redux';\r\nimport {getPacksTC, setSortingAC} from '../../../bll/searchPacks-reducer';\r\n\r\nexport const SortButton: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst sortPrice = (x: string) => {\r\n\t\tdispatch(setSortingAC(x))\r\n\t\tdispatch(getPacksTC())\r\n\t}\r\n\tconst sortUp = () => sortPrice('1updated')\r\n\tconst sortDown = () => sortPrice('0updated')\r\n\r\n\treturn (\r\n\t\t<div className={s.box}>\r\n\t\t\t<div>\r\n\t\t\t\t<SuperButton className={s.btnUp} onClick={sortUp}>\r\n\t\t\t\t\t<img src={up} className={s.up}/>\r\n\t\t\t\t</SuperButton>\r\n\t\t\t\t<SuperButton className={s.btnDown} onClick={sortDown}>\r\n\t\t\t\t\t<img src={down} className={s.down}/>\r\n\t\t\t\t</SuperButton>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {Slider} from '@material-ui/core';\r\nimport s from './DoubleRangeSlider.module.css'\r\nimport {withStyles} from '@material-ui/styles';\r\n\r\n\r\nconst StyledSlider = withStyles({\r\n\troot: {\r\n\t\tcolor: '#4c84e0',\r\n\t},\r\n\tthumb: {\r\n\t\theight: 16,\r\n\t\twidth: 16,\r\n\t\tbackgroundColor: '#4c84e0',\r\n\t\tborder: '2px solid #4c84e0',\r\n\t\tmarginTop: -8,\r\n\t\tmarginLeft: -12,\r\n\t\t'&:focus, &:hover, &$active': {\r\n\t\t\tboxShadow: 'inherit',\r\n\t\t},\r\n\t}\r\n})(Slider);\r\n\r\ntype DoubleRangeSliderType = {\r\n\tmaxCardsCount: number\r\n\tminCardsCount: number\r\n\tminPrice: number\r\n\tmaxPrice: number\r\n\tvalueArray:  Array<number>\r\n\tonChangeRange: (value: number | [number, number]) => void\r\n}\r\nexport const DoubleRangeSlider: React.FC<DoubleRangeSliderType> = (\r\n\t{\r\n\t\tminPrice, maxPrice, valueArray, onChangeRange, minCardsCount,maxCardsCount\r\n\t}\r\n\r\n\t) => {\r\n\r\n\tconst onChangeHandler = (event: ChangeEvent<{}>, value: (number[] | number)) => {\r\n\t\tonChangeRange && onChangeRange(value as number)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.box}>\r\n\t\t\t<div className={s.wrap}>\r\n\t\t\t\t<p className={s.minPrice}>{minPrice}</p>\r\n\t\t\t\t<StyledSlider\r\n\t\t\t\t\tvalue={valueArray}\r\n\t\t\t\t\tonChange={onChangeHandler}\r\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\t\taria-labelledby=\"range-slider\"\r\n\t\t\t\t\tmin={minCardsCount}\r\n\t\t\t\t\tmax={maxCardsCount}\r\n\t\t\t\t/>\r\n\t\t\t\t<p className={s.maxPrice}>{maxPrice}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n\t// baseURL: 'http://localhost:7542/2.0/',\r\n\twithCredentials: true\r\n})\r\n\r\ntype newCardType = {\r\n\tcardsPack_id: string,\r\n\tquestion?: string,\r\n\tanswer?: string\r\n}\r\n\r\ntype updateCardType = {\r\n\t_id: string,\r\n\tquestion?: string,\r\n}\r\n\r\nexport const cardsAPI = {\r\n\tgetCardsData: async (cardsPack_id: string, pageCount: number = 50, page: number = 1) => {\r\n\t\tconst response = await instance.get(`cards/card?cardsPack_id=${cardsPack_id}&pageCount=${pageCount}&page=${page}`)\r\n\t\treturn response.data\r\n\t},\r\n\taddNewCard: async (newCard: newCardType) => {\r\n\t\tconst response = await instance.post('cards/card', {card: newCard})\r\n\t\treturn response.data\r\n\t},\r\n\tupdateCard: async (updateCard: updateCardType) => {\r\n\t\tconst response = await instance.put('cards/card', {card: updateCard})\r\n\t\treturn response.data\r\n\t},\r\n\tdeleteCard: async (cardsPack_id: string) => {\r\n\t\tconst response = await instance.delete(`cards/card?id=${cardsPack_id}` )\r\n\t\treturn response.data\r\n\t}\r\n}","import {ThunkAction} from 'redux-thunk';\r\nimport {AppRootState} from './store';\r\nimport {Dispatch} from 'redux';\r\nimport {cardsAPI} from '../dal/CardsAPI';\r\n\r\nconst SET_CARDS_PACK_ID = 'SET_CARDS_PACK_ID'\r\nconst SET_CARDS_PACK = 'SET_CARDS_PACK'\r\nconst SET_CARDS_ERROR = 'SET_CARDS_ERROR'\r\n\r\nexport type CardType = {\r\n\tanswer: string | null\r\n\tquestion: string | null\r\n\tcardsPack_id: string | null\r\n\tgrade: number | null\r\n\trating: number | null\r\n\tshots: number\r\n\ttype: string | null\r\n\tuser_id: string | null\r\n\tcreated: string | null\r\n\tupdated: string | null\r\n\t__v: number | null\r\n\t_id: string\r\n}\r\n\r\ntype initialStateType = {\r\n\tcards: Array<CardType>\r\n\tcardsPackId: string\r\n\terror: string\r\n}\r\nconst initialState: initialStateType = {\r\n\tcards: [\r\n\t\t{\r\n\t\t\tanswer: null,\r\n\t\t\tquestion: null,\r\n\t\t\tcardsPack_id: null,\r\n\t\t\tgrade: null,\r\n\t\t\trating: null,\r\n\t\t\tshots: 0,\r\n\t\t\ttype: null,\r\n\t\t\tuser_id: null,\r\n\t\t\tcreated: null,\r\n\t\t\tupdated: null,\r\n\t\t\t__v: null,\r\n\t\t\t_id: '',\r\n\t\t}\r\n\t],\r\n\tcardsPackId: '',\r\n\terror: ''\r\n}\r\n\r\nexport const cardsReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_CARDS_PACK_ID: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcardsPackId: action.cardsPackId\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_CARDS_PACK: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcards: action.cards\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SET_CARDS_ERROR: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: action.error\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n\r\nexport const setCardsPackIdAC = (cardsPackId: string) => ({type: SET_CARDS_PACK_ID, cardsPackId} as const)\r\nexport const setCardsPackAC = (cards: Array<CardType>) => ({type: SET_CARDS_PACK, cards} as const)\r\nexport const setCardsErrorAC = (error: string) => ({type: SET_CARDS_ERROR, error} as const)\r\n\r\n\r\ntype ActionsType =\r\n\tReturnType<typeof setCardsPackIdAC>\r\n\t| ReturnType<typeof setCardsPackAC>\r\n\t| ReturnType<typeof setCardsErrorAC>\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootState, Dispatch<ActionsType>, ActionsType>\r\n\r\n\r\nexport const getCardsTC = (): ThunkType => (dispatch, getState) => {\r\n\tconst state = getState()\r\n\tconst cardsPack_id = state.cards.cardsPackId\r\n\r\n\tcardsAPI.getCardsData(cardsPack_id)\r\n\t\t.then(res => {\r\n\t\t\tconsole.log(res.cards)\r\n\t\t\tdispatch(setCardsPackIdAC(cardsPack_id))\r\n\t\t\tdispatch(setCardsPackAC(res.cards))\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\t// dispatch(setCardsErrorAC(error))\r\n\t\t\tdispatch(setCardsErrorAC('Please, choose a pack on the Packs page'))\r\n\t\t})\r\n}\r\n\r\nexport const addCardTC = (cardsPack_id: string, question?: string, answer?: string): ThunkType => (dispatch, getState) => {\r\n\tconst newCard = {\r\n\t\tcardsPack_id: cardsPack_id,\r\n\t\tquestion: question,\r\n\t\tanswer: answer\r\n\t}\r\n\tcardsAPI.addNewCard(newCard)\r\n\t\t.then(() => {\r\n\t\t\tdispatch(getCardsTC())\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\tdispatch(setCardsErrorAC(error))\r\n\t\t})\r\n}\r\n\r\nexport const updateCardTC = (cardId: string): ThunkType => (dispatch, getState) => {\r\n\tconst updateCard = {\r\n\t\t_id: cardId,\r\n\t\tquestion: 'Question was updated'\r\n\t}\r\n\tcardsAPI.updateCard(updateCard)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(getCardsTC())\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\tdispatch(setCardsErrorAC(error))\r\n\t\t})\r\n}\r\n\r\n\r\nexport const deleteCardTC = (cardsPack_id: string): ThunkType => (dispatch, getState) => {\r\n\r\n\tcardsAPI.deleteCard(cardsPack_id)\r\n\t\t.then((res) => {\r\n\t\t\tdispatch(getCardsTC())\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconst error = err.response\r\n\t\t\t\t? err.response.data.error\r\n\t\t\t\t: (err.message + ', more details in the console');\r\n\t\t\tdispatch(setCardsErrorAC(error))\r\n\t\t})\r\n}","import React, {FC, ReactNode} from 'react';\r\nimport s from './Table.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootState} from '../../bll/store';\r\nimport {PackType} from '../../bll/searchPacks-reducer';\r\nimport {addCardTC, CardType} from '../../bll/cards-reducer';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\n\r\n\r\ntype TablePropsType = {\r\n\theaderElement: Array<string>\r\n\trenderPacksBody?: (cardPacks: Array<PackType>) => ReactNode\r\n\trenderCardsBody?: (cardPacks: Array<CardType>) => ReactNode\r\n\tisTableCard?: boolean\r\n}\r\n\r\nexport const Table: FC<TablePropsType> = ({headerElement, renderPacksBody, renderCardsBody, isTableCard}) => {\r\n\tconst cards = useSelector<AppRootState, Array<CardType>>(state => state.cards.cards)\r\n\tconst cardPacks = useSelector<AppRootState, Array<PackType>>(state => state.search.cardPacks)\r\n\tconst error = useSelector<AppRootState, string>(state => state.cards.error)\r\n\tconst cardsPackId = useSelector<AppRootState, string>(state => state.cards.cardsPackId)\r\n\tconst dispatch = useDispatch()\r\n\r\n\r\n\tconst renderHeader = (headerElement: Array<string>) => {\r\n\t\treturn headerElement.map((key, index) => {\r\n\t\t\treturn <th key={index}>{key.toUpperCase()}</th>\r\n\t\t})\r\n\t}\r\n\r\n\tconst addNewCardHandler = () => {\r\n\t\tdispatch(addCardTC(cardsPackId))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.tableBox}>\r\n\t\t\t{renderCardsBody && <SuperButton className={s.addBtn} onClick={addNewCardHandler}>Add Card</SuperButton>}\r\n\t\t\t{isTableCard && error && !cardsPackId &&\r\n      <div className={s.errorBox}>{error && <div className={s.error}>{error}</div>}</div>}\r\n\t\t\t<table className={s.table}>\r\n\t\t\t\t<thead>\r\n\t\t\t\t<tr>{renderHeader(headerElement)}</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{renderPacksBody ? renderPacksBody(cardPacks) : null}\r\n\t\t\t\t{renderCardsBody && cardsPackId ? renderCardsBody(cards) : null}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {FC, ReactNode, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getPacksTC, PackType} from '../../bll/searchPacks-reducer';\r\nimport Search from '../common/Search/Search';\r\nimport {Paginate} from '../common/Pagination/Paginate';\r\nimport Loader from '../common/Loader/Loader';\r\nimport {SortButton} from '../common/SortButton/SortButton';\r\nimport s from './Packs.module.css'\r\nimport {DoubleRangeSlider} from '../common/PriceRange/DoubleRangeSlider';\r\nimport {Table} from '../Table/Table';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {AppRootState} from '../../bll/store';\r\nimport {setMyIdAC} from '../../bll/profile-reducer';\r\n\r\ntype PacksType = {\r\n\tcardPacks: Array<PackType>\r\n\tstatus: string\r\n\terror: string\r\n\ttotalPacksCount: number\r\n\tpacksPerPage: number\r\n\tpage: number\r\n\thandlePageChange: (pageNumber: number) => void\r\n\tmaxCardsCount: number\r\n\tminCardsCount: number\r\n\tminPrice: number\r\n\tmaxPrice: number\r\n\tvalueArray: Array<number>\r\n\tonChangeRange: (value: number | [number, number]) => void\r\n\trenderPacksBody: (cardPacks: Array<PackType>) => ReactNode\r\n\theaderElementPacks: Array<string>\r\n\taddPack: (name: string) => void\r\n\tisLoggedIn: boolean\r\n}\r\n\r\nexport const Packs: FC<PacksType> = (\r\n\t{\r\n\t\tcardPacks, status, error,\r\n\t\tpage, totalPacksCount, packsPerPage, handlePageChange,\r\n\t\tmaxCardsCount, minCardsCount, minPrice, maxPrice, valueArray, onChangeRange,\r\n\t\trenderPacksBody, headerElementPacks,\r\n\t\taddPack, isLoggedIn\r\n\t}\r\n) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst myID = useSelector<AppRootState, string | null>(state => state.profile.profile._id)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isLoggedIn) return\r\n\t\tdispatch(setMyIdAC(null))\r\n\t\tdispatch(getPacksTC())\r\n\t}, [dispatch])\r\n\r\n\tconst getMyPacks = () => {\r\n\t\tdispatch(setMyIdAC(myID))\r\n\t\tdispatch(getPacksTC())\r\n\t}\r\n\r\n\tconst getAllPacks = () => {\r\n\t\tdispatch(setMyIdAC(null))\r\n\t\tdispatch(getPacksTC())\r\n\t}\r\n\r\n\t// const addPackHandler = (name: string) => {\r\n\tconst addPackHandler = () => {\r\n\t\taddPack('Add new pack')\r\n\t}\r\n\r\n\tif (status === 'loading') {\r\n\t\treturn <Loader/>\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.packsBox}>\r\n\t\t\t<div className={s.packsContent}>\r\n\t\t\t\t<h2>Search packs</h2>\r\n\t\t\t\t<div className={s.searchBox}>\r\n\t\t\t\t\t<Search/>\r\n\t\t\t\t\t<SortButton/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{error && <div className={s.error}>{error}</div>}\r\n\t\t\t\t<DoubleRangeSlider maxCardsCount={maxCardsCount} maxPrice={maxPrice}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t minCardsCount={minCardsCount} minPrice={minPrice}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t valueArray={valueArray} onChangeRange={onChangeRange}/>\r\n\t\t\t\t<SuperButton onClick={getMyPacks} className={s.myPacks}>My packs</SuperButton>\r\n\t\t\t\t<SuperButton onClick={getAllPacks} className={s.myPacks}>All packs</SuperButton>\r\n\t\t\t\t<SuperButton onClick={addPackHandler} className={s.myPacks}>Add pack</SuperButton>\r\n\r\n\t\t\t\t<Table headerElement={headerElementPacks} renderPacksBody={renderPacksBody} />\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.paginateBox}>\r\n\t\t\t\t<Paginate totalPacksCount={totalPacksCount} packsPerPage={packsPerPage}\r\n\t\t\t\t\t\t\t\t\thandlePageChange={handlePageChange} page={page}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport {Packs} from './Packs';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootState} from '../../bll/store';\r\nimport {\r\n\taddPackTC,\r\n\tdeletePackTC,\r\n\tgetPacksTC,\r\n\tPackType,\r\n\tsetCurrentPageAC,\r\n\tsetMinMaxPriceRangeAC, updatePackTÐ¡\r\n} from '../../bll/searchPacks-reducer';\r\nimport {RequestStatusType} from '../../bll/app-reducer';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../Routes';\r\nimport s from '../Table/Table.module.css';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport { setCardsPackIdAC} from '../../bll/cards-reducer';\r\n\r\n\r\nexport const PacksContainer = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst cardPacks = useSelector<AppRootState, Array<PackType>>(state => state.search.cardPacks)\r\n\tconst status = useSelector<AppRootState, RequestStatusType>(state => state.search.status)\r\n\tconst error = useSelector<AppRootState, string>(state => state.search.error)\r\n\tconst totalPacksCount = useSelector<AppRootState, number>(state => state.search.totalPacksCount)\r\n\tconst packsPerPage = useSelector<AppRootState, number>(state => state.search.packsPerPage)\r\n\tconst page = useSelector<AppRootState, number>(state => state.search.page)\r\n\tconst minCardsCount = useSelector<AppRootState, number>(state => state.search.minCardsCount)\r\n\tconst maxCardsCount = useSelector<AppRootState, number>(state => state.search.maxCardsCount)\r\n\tconst minPrice = useSelector<AppRootState, number>(state => state.search.min)\r\n\tconst maxPrice = useSelector<AppRootState, number>(state => state.search.max)\r\n\tconst valueArray = [minPrice, maxPrice]\r\n\tconst headerElementPacks = ['USERNAME', 'NAME', 'CARDSCOUNT',  'UPDATED', 'CARDS', 'OPERATIONS']\r\n\tconst isLoggedIn = useSelector<AppRootState, boolean>(state => state.auth.isLoggedIn)\r\n\r\n\tconst onChangeRange = (value: number | [number, number]) => {\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tdispatch(setMinMaxPriceRangeAC(value[0], value[1]))\r\n\t\t}\r\n\t}\r\n\r\n\tconst handlePageChange = (pageNumber: number) => {\r\n\t\tdispatch(setCurrentPageAC(pageNumber))\r\n\t\tdispatch(getPacksTC())\r\n\t}\r\n\r\n\tconst onClickLinkHandler = (packId: string) => dispatch(setCardsPackIdAC(packId))\r\n\r\n\tconst removePack = (packId: string | null) => dispatch(deletePackTC(packId))\r\n\r\n\tconst updatePack = (packId: string) => dispatch(updatePackTÐ¡(packId))\r\n\r\n\tconst addPack = (name: string) => dispatch(addPackTC(name))\r\n\r\n\tif (!isLoggedIn) {\r\n\t\treturn <Redirect to={PATH.LOGIN}/>\r\n\t}\r\n\r\n\tconst renderPacksBody = (cardPacks: Array<PackType>) => {\r\n\t\treturn cardPacks && cardPacks.map(({ _id, name, cardsCount,user_name, updated }) => {\r\n\t\t\treturn (\r\n\t\t\t\t<tr key={_id}>\r\n\t\t\t\t\t<td>{user_name}</td>\r\n\t\t\t\t\t<td>{name}</td>\r\n\t\t\t\t\t<td>{cardsCount}</td>\r\n\t\t\t\t\t<td>{updated}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<NavLink to={PATH.CARDS} className={s.cardLink} onClick={() => {onClickLinkHandler(_id)}}>Cards</NavLink>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td className={s.operation}>\r\n\t\t\t\t\t\t<SuperButton onClick={() => updatePack(_id)} className={s.updBtn}>Update</SuperButton>\r\n\t\t\t\t\t\t<SuperButton onClick={() => removePack(_id)} className={s.delBtn}>Delete</SuperButton>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Packs cardPacks={cardPacks}\r\n\t\t\t\t\t\t status={status} error={error} totalPacksCount={totalPacksCount} packsPerPage={packsPerPage} page={page}\r\n\t\t\t\t\t\t handlePageChange={handlePageChange}\r\n\t\t\t\t\t\t minCardsCount={minCardsCount}\r\n\t\t\t\t\t\t maxCardsCount={maxCardsCount}\r\n\t\t\t\t\t\t minPrice={minPrice}\r\n\t\t\t\t\t\t maxPrice={maxPrice}\r\n\t\t\t\t\t\t valueArray={valueArray}\r\n\t\t\t\t\t\t onChangeRange={onChangeRange}\r\n\t\t\t\t\t\t renderPacksBody={renderPacksBody}\r\n\t\t\t\t\t\t headerElementPacks={headerElementPacks}\r\n\t\t\t\t\t\t addPack={addPack}\r\n\t\t\t\t\t\t isLoggedIn={isLoggedIn}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {CardType, deleteCardTC, getCardsTC, updateCardTC} from '../../bll/cards-reducer';\r\nimport {Table} from '../Table/Table';\r\nimport s from '../Table/Table.module.css';\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport {AppRootState} from '../../bll/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from '../Routes';\r\n\r\nexport const Cards = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isLoggedIn = useSelector<AppRootState, boolean>(state => state.auth.isLoggedIn)\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCardsTC())\r\n\t}, [dispatch])\r\n\r\n\tconst headerElement= ['QUESTION', 'ANSWER', 'GRADE', 'ACTIONS']\r\n\r\n\tconst updateCard = (cardId: string) => {\r\n\t\tdispatch(updateCardTC(cardId))\r\n\t}\r\n\r\n\tconst removeCard = (cardId: string) => {\r\n\t\tdispatch(deleteCardTC(cardId))\r\n\t}\r\n\r\n\tif (!isLoggedIn) {\r\n\t\treturn <Redirect to={PATH.LOGIN}/>\r\n\t}\r\n\r\n\tconst renderCardsBody = (cards: Array<CardType>) => {\r\n\t\treturn cards && cards.map(({_id, question, answer, grade }) => {\r\n\t\t\treturn (\r\n\t\t\t\t<tr key={_id}>\r\n\t\t\t\t\t<td>{question}</td>\r\n\t\t\t\t\t<td>{answer}</td>\r\n\t\t\t\t\t<td>{grade}</td>\r\n\t\t\t\t\t<td className={s.operation}>\r\n\t\t\t\t\t\t<SuperButton onClick={() => {updateCard(_id)}} className={s.updBtn}>Update</SuperButton>\r\n\t\t\t\t\t\t<SuperButton onClick={() => {removeCard(_id)}} className={s.delBtn}>Delete</SuperButton>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.cardTableBox}>\r\n\t\t\t<Table headerElement={headerElement} renderCardsBody={renderCardsBody} isTableCard={true}/>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginContainer } from \"./login/LoginContainer\";\r\nimport {ProfileContainer} from \"./profile/ProfileContainer\";\r\nimport {Test} from \"./test/Test\";\r\nimport {RegistrationContainer} from \"./registration/RegistrationContainer\";\r\nimport {Error404} from \"./error404/Error404\";\r\nimport {NewPasswordContainer} from \"./newPassword/NewPasswordContainer\";\r\nimport {PasswordRecoveryContainer} from \"./passwordRecovery/PasswordRecoveryContainer\";\r\nimport {PacksContainer} from './packs/PacksContainer';\r\nimport {Cards} from './Cards/Cards';\r\n\r\nexport const PATH = {\r\n    LOGIN:'/login',\r\n    REGISTRATION:'/reg',\r\n    PROFILE:'/profile',\r\n    ERROR_404:'/404',\r\n    RECOVERY_PASSWORD:'/rec_pass',\r\n    NEW_PASSWORD:'/new_pass',\r\n    TEST:'/test',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <LoginContainer/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <RegistrationContainer/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <PasswordRecoveryContainer/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordContainer/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.PACKS} render={() => <PacksContainer/>}/>\r\n                <Route path={PATH.CARDS} render={() => <Cards/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport style from \"./Menu.module.css\"\r\n\r\ntype MenuType = {\r\n    className: string | undefined\r\n}\r\n\r\nexport const Menu: React.FC<MenuType> = ({className}) => {\r\n\r\n    return (\r\n        <div className={`${className}`}>\r\n            <div className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.REGISTRATION}>Registration</NavLink>\r\n            </div>\r\n            <div className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.LOGIN}>Login</NavLink>\r\n            </div>\r\n            <div className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.PROFILE}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.RECOVERY_PASSWORD}>Recovery Password</NavLink>\r\n            </div>\r\n            <div className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.NEW_PASSWORD}>NewPassword</NavLink>\r\n            </div>\r\n            <div className={style.wrapLink}>\r\n            </div>\r\n            <div  className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.PACKS}>Packs</NavLink>\r\n            </div>\r\n            <div className={style.wrapLink}>\r\n                <NavLink className={style.link} to={PATH.CARDS}>Cards</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport style from './Modal.module.css'\r\nimport SuperButton from \"../SuperButton/SuperButton\";\r\n\r\n\r\ntype ModalType = {\r\n    activeModal: boolean\r\n    setActiveModal: (activeModal: boolean) => void\r\n    children: any\r\n}\r\n\r\n\r\nexport const Modal = (props: ModalType) => {\r\n    const {activeModal, setActiveModal, children} = props\r\n\r\n    return (\r\n        <div className={activeModal ? style.modalActive : style.modal}>\r\n            <div className={style.modalContent}>\r\n                {children}\r\n                <SuperButton red\r\n                             type={\"button\"}\r\n                             onClick={() => setActiveModal(false)}\r\n                             className={style.btnClose}>\r\n                    x\r\n                </SuperButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styleH from \"../header/Header.module.css\"\r\nimport SuperButton from '../common/SuperButton/SuperButton';\r\nimport { Menu } from '../common/Menu/Menu';\r\nimport { Modal } from '../common/Modal/Modal';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const Header: React.FC = () => {\r\n\r\n    const [active, setActive] = useState(false)\r\n\r\n    return (\r\n\r\n        <div className={styleH.wrap}>\r\n            <SuperButton className={active ? styleH.btnMenu : styleH.btnMenuActive}\r\n                         onClick={() => setActive(true)}>\r\n                Menu\r\n            </SuperButton>\r\n            {!active && <Menu className={styleH.nav}/>}\r\n\r\n\r\n            {active &&   <Modal activeModal={active} setActiveModal={setActive}>\r\n                <Menu className={styleH.navActive}/>\r\n                </Modal>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Routes} from \"./components/Routes\";\r\nimport {Header} from \"./components/header/Header\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {initializeAppTC} from \"./bll/app-reducer\";\r\nimport {AppRootState} from \"./bll/store\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch()\r\n    const initialized = useSelector<AppRootState, boolean>(state => state.app.initialized)\r\n    useEffect(() => {\r\n        if (!initialized) {\r\n            dispatch(initializeAppTC())\r\n        }\r\n    }, [initialized, dispatch])\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport { newPasswordReducer } from \"./newPassword-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport { recoveryPasswordReducer} from \"./recoveryPassword-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {searchPacksReducer} from './searchPacks-reducer';\r\nimport {cardsReducer} from './cards-reducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth : loginReducer,\r\n    profile: profileReducer,\r\n    recoveryPassword: recoveryPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    registration: registrationReducer,\r\n    app: appReducer,\r\n    search: searchPacksReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootState = ReturnType<typeof rootReducer> //Ð°Ð²ÑÐ¾Ð¼Ð°ÑÐ¸ÑÐµÑÐºÐ¸ Ð¿Ð¾Ð´ÑÑÐ³Ð¸Ð²Ð°ÐµÑ ÑÐ¸Ð¿Ñ Ð¸Ð· combineReducers\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableBox\":\"Table_tableBox__3QFky\",\"table\":\"Table_table__1ZYjY\",\"operation\":\"Table_operation__36-wN\",\"delBtn\":\"Table_delBtn__3FV7w\",\"updBtn\":\"Table_updBtn__3XqWC\",\"cardLink\":\"Table_cardLink__BF1JG\",\"addBtn\":\"Table_addBtn__1tqdH\",\"error\":\"Table_error__P6-V2\",\"errorBox\":\"Table_errorBox__3p8rM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapLink\":\"Menu_wrapLink__e2BBn\",\"link\":\"Menu_link__3CBsq\",\"nav\":\"Menu_nav___0pzU\",\"navActive\":\"Menu_navActive__2JjmP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationList\":\"Paginate_paginationList__3g2pc\",\"paginationItem\":\"Paginate_paginationItem__3y9ht\",\"paginationLink\":\"Paginate_paginationLink__58xDC\",\"paginationItemActive\":\"Paginate_paginationItemActive__1-VTd\",\"paginationLinkActive\":\"Paginate_paginationLinkActive__1ZpM_\",\"linkClassFirst\":\"Paginate_linkClassFirst__2FdmG\",\"linkClassLast\":\"Paginate_linkClassLast__2ev3t\",\"linkClassPrev\":\"Paginate_linkClassPrev__bJCWY\",\"linkClassNext\":\"Paginate_linkClassNext__qIhBp\",\"disabledClass\":\"Paginate_disabledClass__3W_FZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsList\":\"Packs_packsList__U78AA\",\"packsContent\":\"Packs_packsContent__1n7dY\",\"packsItem\":\"Packs_packsItem__3C8zT\",\"searchBox\":\"Packs_searchBox__5Iemo\",\"error\":\"Packs_error__3bzm2\",\"packsBox\":\"Packs_packsBox__1oLzm\",\"paginateBox\":\"Packs_paginateBox__1goGs\",\"myPacks\":\"Packs_myPacks__1bJwN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"Login_formLogin__1BpGK\",\"link\":\"Login_link__q-AMr\",\"error\":\"Login_error__1qxBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formRegistration\":\"Registration_formRegistration__2h4X2\",\"link\":\"Registration_link__2g5Zl\",\"error\":\"Registration_error__3LdZ2\",\"label\":\"Registration_label__3TDCt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"SortButton_box__3w4W-\",\"up\":\"SortButton_up__2myDA\",\"down\":\"SortButton_down__2YgJZ\",\"btnUp\":\"SortButton_btnUp__3iuJN\",\"btnDown\":\"SortButton_btnDown__3H_BD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Header_wrap___6iya\",\"nav\":\"Header_nav__1mzt6\",\"btnMenu\":\"Header_btnMenu__1-bfR\",\"btnMenuActive\":\"Header_btnMenuActive__2Y85z\",\"navActive\":\"Header_navActive__1ZL2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1c1ho\",\"superInput\":\"SuperInputText_superInput__tvKWa\",\"error\":\"SuperInputText_error__ECzLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"NewPassword_box__3uPkJ\",\"newPassBtn\":\"NewPassword_newPassBtn__hGgsh\",\"error\":\"NewPassword_error__2y6QY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"DoubleRangeSlider_box__20RHB\",\"wrap\":\"DoubleRangeSlider_wrap__22v_N\",\"minPrice\":\"DoubleRangeSlider_minPrice__38o2O\",\"maxPrice\":\"DoubleRangeSlider_maxPrice__21P9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__Pn2EN\",\"modalActive\":\"Modal_modalActive__bLWpk\",\"btnClose\":\"Modal_btnClose__2Up33\",\"modalContent\":\"Modal_modalContent__3BblL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Profile_wrap__1C2gC\",\"link\":\"Profile_link__49-wm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"PasswordRecovery_box__bawp6\",\"recoveryBtn\":\"PasswordRecovery_recoveryBtn__3ZN32\",\"error\":\"PasswordRecovery_error__2zKnY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__3cLSb\",\"default\":\"SuperButton_default__3fGvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2kSHS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"Preloader_preload__2_9rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBtn\":\"Search_searchBtn__eh6BL\"};"],"sourceRoot":""}